@page "/"
@using Blazor.ViewModels
@using Blazor.Data
@inject EntityManager EntityManager

<div class="outer-box">
    <div class="left-side-box">
        <div class="left-side-top-area">
            <label>V: @Constants.Version</label>
            <button @onclick="GenerateDiagram" style="float:right; margin: 5px">Generate -></button>
        </div>
        <textarea class="script-input-area" @bind="sqlScript">

        </textarea>
    </div>
    <div class="right-side-box">
        <div class="diagram-canvas"
             @onclick="PrintCoords">
            @foreach (EntityViewModel entity in entities)
            {
                <EntityBox Evm="entity" OnRelease="ReDraw"></EntityBox>
            }
            <svg class="fk-link-svg-canvas">
                @foreach (FkLink link in links)
                {
                    <FkLinkComp Link="link"/>
                }
            </svg>
        </div>
    </div>
</div>


@code {

    private string sqlScript = @"CREATE TABLE ""TvShows"" (
    ""Id"" INTEGER NOT NULL CONSTRAINT ""PK_TvShows"" PRIMARY KEY AUTOINCREMENT,
    ""Title"" TEXT NOT NULL,
    ""Year"" INTEGER NOT NULL,
    ""Genre"" TEXT NOT NULL
);

CREATE TABLE ""Episodes"" (
    ""Id"" INTEGER NOT NULL CONSTRAINT ""PK_Episodes"" PRIMARY KEY AUTOINCREMENT,
    ""Title"" TEXT NOT NULL,
    ""Runtime"" INTEGER NOT NULL,
    ""SeasonId"" TEXT NOT NULL,
    ""TvShowId"" INTEGER NOT NULL,
    CONSTRAINT ""FK_Episodes_TvShows_TvShowId"" FOREIGN KEY (""TvShowId"") REFERENCES ""TvShows"" (""Id"") ON DELETE CASCADE
);";

    private List<EntityViewModel> entities = new();
    private List<FkLink> links = new();

    private void PrintCoords(MouseEventArgs e)
    {
        Console.WriteLine($"Board click pos: ({e.ClientX}, {e.ClientY})");
    }

    private async Task GenerateDiagram()
    {
        entities = new();
        await Task.Delay(500);
        EntityManager.GenerateData(sqlScript);
        entities = EntityManager.Entities;
        links = EntityManager.FkLinks;
    }

    private void ReDraw()
    {
        Console.WriteLine("State change");
        StateHasChanged();
    }

}